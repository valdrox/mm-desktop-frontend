/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef, useState } from "react";
import * as THREE from "three";
import { useGLTF } from "@react-three/drei/useGLTF";
import { Canvas, useThree } from "react-three-fiber";   
import Vertebra from "./Vertebra";
import axios from 'axios';

export default function Spine(props) {
    const group = useRef();
    const [hover, setHover] = useState(false);
    const { nodes } = useGLTF(props.resultFile, true);

    if (props.selectedVertebrae) {
        for (const [key, value] of Object.entries(props.selectedVertebrae)) {
            console.log(`${key}: ${value}`);
            if (nodes[key]) {
                nodes[key].material.color.set(value ? 0x3589ff : 0xafafaf);
                nodes[key].material.wireframe = value;   
            }
        }
    }

    
    const meshes = [];
    for(const [key, _] of Object.entries(nodes)) {
        meshes.push(
            <mesh key={key}
                material={nodes[key].material}
                geometry={nodes[key].geometry}>
                <meshStandardMaterial color="lightgrey" side="DoubleSide" />
            </mesh>
            );
    }
    

    return (
        <group ref={group} {...props} dispose={null}>
            {meshes}
            {/*
            <mesh geometry={nodes.c7.geometry}>
                </mesh>

            <mesh
                material={nodes.th10.material}
                geometry={nodes.th10.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>
            <mesh
                material={nodes.th11.material}
                geometry={nodes.th11.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>
            <mesh
                material={nodes.th12.material}
                geometry={nodes.th12.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>
            <mesh
                material={nodes.th9.material}
                geometry={nodes.th9.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>
            <mesh
                material={nodes.th8.material}
                geometry={nodes.th8.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>
             <mesh
                material={nodes.th7.material}
                geometry={nodes.th7.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>

            <mesh
                material={nodes.th5.material}
                geometry={nodes.th5.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>

            <mesh
                material={nodes.th4.material}
                geometry={nodes.th4.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>            
            <mesh
                material={nodes.th3.material}
                geometry={nodes.th3.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>
            <mesh
                material={nodes.th2.material}
                geometry={nodes.th2.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>
            <mesh
                material={nodes.th1.material}
                geometry={nodes.th1.geometry}>
                 <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>
            <mesh
                material={nodes.l1.material}
                geometry={nodes.l1.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />  
                </mesh>
            <mesh
                material={nodes.l2.material}
                geometry={nodes.l2.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>
            <mesh
                material={nodes.l3.material}
                geometry={nodes.l3.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>
            <mesh
                material={nodes.l5.material}
                geometry={nodes.l5.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>
            <mesh
                material={nodes.l4.material}
                geometry={nodes.l4.geometry}>
                <meshStandardMaterial color="lightgrey" transparent />    
                </mesh>
            */}
        </group>
    );
}

useGLTF.preload("/spine.glb");